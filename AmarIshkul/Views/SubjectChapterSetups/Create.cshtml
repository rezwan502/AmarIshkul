@model AmarIshkul.Entity.SubjectChapterSetup

@{
    ViewBag.Title = "New Chapter";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="col-lg-12">
        <div class="panel panel-primary panel-primary-extention" style="border-color:#000">
            <div class="panel-heading" style="text-align:center;font-size:large;background-color:#000;border-color:#000">New Chapter</div>
            <div class="panel-body">
                <br />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                <div class="form-group">
                    @Html.LabelFor(model => model.ClassId, "Class", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("ClassId", null, "", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SubjectId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <br />


                <div class="form-group">
                    @Html.LabelFor(model => model.SubjectId, "Subject", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("SubjectId", null,"", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SubjectId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <br />

                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <br />


                <div class="form-group">
                    @Html.LabelFor(model => model.IsActive, "Is Active", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox" style="padding-left:18px;">
                            @Html.EditorFor(model => model.IsActive)
                            @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <br />
                <br />
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", null, new { @Class = "btn btn-info btn-sm" })
</div>



@section Scripts{
    @*@Scripts.Render("~/bundles/jquery")*@

    @*@Scripts.Render("~/bundles/bootstrap") *@

    <script type="text/jscript">
        $('#ClassId').change(function () {
            $('#SubjectId').empty();
            $.getJSON('/SubjectChapterWiseDetails/GetSubjects/' + $('#ClassId').val(), function (data2) {
                var items2 = '<option></option>';
                $.each(data2, function (i, state) {
                    items2 += "<option value='" + state.Value + "'>" + state.Text + "</option>";
                });
                $('#SubjectId').html(items2);
            });
        });

    </script>
}